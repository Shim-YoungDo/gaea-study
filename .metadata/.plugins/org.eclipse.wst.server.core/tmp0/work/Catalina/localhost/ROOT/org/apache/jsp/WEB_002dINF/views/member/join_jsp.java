/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2021-12-13 03:49:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/member/join.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.js\"\r\n");
      out.write("	integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("	<form id=\"join_form\" method=\"post\">\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		<div class=\"subject\">\r\n");
      out.write("			<span>회원가입</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"id_wrap\">\r\n");
      out.write("			<div class=\"id_name\">아이디</div>\r\n");
      out.write("			<div class=\"id_input_box\">\r\n");
      out.write("				<input class=\"id_input\" name=\"memberID\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<span class=\"id_input_available_id\">사용 가능한 아이디입니다.</span>\r\n");
      out.write("			<span class=\"id_input_unavailable_id\">존재하는 아이디입니다.</span>\r\n");
      out.write("			<span class=\"final_id_ck\">아이디를 입력해주세요.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"pw_wrap\">\r\n");
      out.write("			<div class=\"pw_name\">비밀번호</div>\r\n");
      out.write("			<div class=\"pw_input_box\">\r\n");
      out.write("				<input class=\"pw_input\" name=\"memberPW\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<span class=\"final_pw_ck\">비밀번호를 입력해주세요.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"pwcheck_wrap\">\r\n");
      out.write("			<div class=\"pwcheck_name\">비밀번호 확인</div>\r\n");
      out.write("			<div class=\"pwcheck_input_box\">\r\n");
      out.write("				<input class=\"pwcheck_input\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<span class=\"final_pwck_ck\">비밀번호 확인을 입력해주세요.</span>\r\n");
      out.write("			<!--  <span class=\"pwCheck_input_correct\">비밀번호가 일치합니다.</span>-->\r\n");
      out.write("            <span class=\"pwCheck_input_incorrect\">비밀번호가 일치하지 않습니다.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"member_wrap\">\r\n");
      out.write("			<div class=\"member_name\">이름</div>\r\n");
      out.write("			<div class=\"member_input_box\">\r\n");
      out.write("				<input class=\"member_input\" name=\"memberName\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<span class=\"final_name_ck\">이름을 입력해주세요.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"mail_wrap\">\r\n");
      out.write("			<div class=\"mail_name\">이메일</div>\r\n");
      out.write("			<div class=\"mail_input_box\">\r\n");
      out.write("				<input class=\"mail_input\" name=\"memberMail\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<span class=\"final_mail_ck\">이메일을 입력해주세요.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"mail_check_wrap\">\r\n");
      out.write("			<div class=\"mail_check_input_box\" id=\"mail_check_input_box_false\">\r\n");
      out.write("				<input class=\"mail_check_input\" disabled=\"disabled\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"mail_check_button\">\r\n");
      out.write("				<span>인증번호 전송</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"clearfix\">\r\n");
      out.write("				<span id=\"mail_check_input_box_warnning\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"join_button_wrap\">\r\n");
      out.write("			<input type=\"button\" class=\"join_button\" value=\"가입하기\">\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var code = \"\"; //이메일 전송 인증번호 저장을 위한 변수\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var idCheck = false;			// 아이디\r\n");
      out.write("var idckCheck = false;			// 아이디 중복 검사\r\n");
      out.write("var pwCheck = false;			// 비번\r\n");
      out.write("var pwckCheck = false;			// 비번 확인\r\n");
      out.write("var pwckcorCheck = false;		// 비번 확인 일치 확인\r\n");
      out.write("var nameCheck = false;			// 이름\r\n");
      out.write("var mailCheck = false;			// 이메일\r\n");
      out.write("var mailnumCheck = false;		// 이메일 인증번호 확인\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	$(\".join_button\").click(function(){\r\n");
      out.write("\r\n");
      out.write("		var id = $('.id_input').val(); 				// id 입력란\r\n");
      out.write("		var pw = $('.pw_input').val();				// 비밀번호 입력란\r\n");
      out.write("		var pwck = $('.pwcheck_input').val();			// 비밀번호 확인 입력란\r\n");
      out.write("		var name = $('.member_input').val();			// 이름 입력란\r\n");
      out.write("		var mail = $('.mail_input').val();			// 이메일 입력란\r\n");
      out.write("        \r\n");
      out.write("        /*\r\n");
      out.write("		try{\r\n");
      out.write("			if(id==\"\"){\r\n");
      out.write("				//$('.final_id_ck').css('display','block');\r\n");
      out.write("				//idCheck = false;\r\n");
      out.write("				throw new Error;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$('.final_id_ck').css('display', 'none');\r\n");
      out.write("				idCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			$('.final_id_ck').css('display','block');\r\n");
      out.write("			idCheck = false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		try{\r\n");
      out.write("			if(pw==\"\"){\r\n");
      out.write("				throw new Error;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$('.final_pw_ck').css('display', 'none');\r\n");
      out.write("				pwCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			$('.final_pw_ck').css('display','block');\r\n");
      out.write("			pwCheck = false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		try{\r\n");
      out.write("			if(pwck==\"\"){\r\n");
      out.write("				throw new Error;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("				pwckCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			$('.final_pwck_ck').css('display','block');\r\n");
      out.write("			pwckCheck = false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		try{\r\n");
      out.write("			if(name==\"\"){\r\n");
      out.write("				throw new Error;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$('.final_name_ck').css('display', 'none');\r\n");
      out.write("				nameCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			$('.final_name_ck').css('display','block');\r\n");
      out.write("			nameCheck = false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		try{\r\n");
      out.write("			if(mail==\"\"){\r\n");
      out.write("				throw new Error;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$('.final_mail_ck').css('display', 'none');\r\n");
      out.write("				mailCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			$('.final_mail_ck').css('display','block');\r\n");
      out.write("			mailCheck = false;\r\n");
      out.write("		}\r\n");
      out.write("        \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		try{\r\n");
      out.write("			\r\n");
      out.write("			if(idCheck&&idckCheck&&pwCheck&&pwckCheck&&pwckcorCheck&&nameCheck&&mailCheck&&mailnumCheck == true){\r\n");
      out.write("				//$(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("				//$(\"#join_form\").submit();\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("			$(\"#join_form\").submit();\r\n");
      out.write("			throw new Error;\r\n");
      out.write("			return false;\r\n");
      out.write("			\r\n");
      out.write("		}catch(Error){\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		/* 아이디 유효성검사 */\r\n");
      out.write("		if(id == \"\"){\r\n");
      out.write("			$('.final_id_ck').css('display','block');\r\n");
      out.write("			idCheck = false;\r\n");
      out.write("		}else{\r\n");
      out.write("			$('.final_id_ck').css('display', 'none');\r\n");
      out.write("			idCheck = true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 비밀번호 유효성 검사 */\r\n");
      out.write("		if(pw == \"\"){\r\n");
      out.write("			$('.final_pw_ck').css('display','block');\r\n");
      out.write("			pwCheck = false;\r\n");
      out.write("		}else{\r\n");
      out.write("			$('.final_pw_ck').css('display', 'none');\r\n");
      out.write("			pwCheck = true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 비밀번호 확인 유효성 검사 */\r\n");
      out.write("		if(pwck == \"\"){\r\n");
      out.write("			$('.final_pwck_ck').css('display','block');\r\n");
      out.write("			pwckCheck = false;\r\n");
      out.write("		}else{\r\n");
      out.write("			$('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("			pwckCheck = true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 이름 유효성 검사 */\r\n");
      out.write("		if(name == \"\"){\r\n");
      out.write("			$('.final_name_ck').css('display','block');\r\n");
      out.write("			nameCheck = false;\r\n");
      out.write("		}else{\r\n");
      out.write("			$('.final_name_ck').css('display', 'none');\r\n");
      out.write("			nameCheck = true;\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		/* 이메일 유효성 검사 */\r\n");
      out.write("		if(mail == \"\"){\r\n");
      out.write("			$('.final_mail_ck').css('display','block');\r\n");
      out.write("			mailCheck = false;\r\n");
      out.write("		}else{\r\n");
      out.write("			$('.final_mail_ck').css('display', 'none');\r\n");
      out.write("			mailCheck = true;\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		/* 최종 유효성 검사 */\r\n");
      out.write("		if(idCheck&&idckCheck&&pwCheck&&pwckCheck&&pwckcorCheck&&nameCheck&&mailCheck&&mailnumCheck){\r\n");
      out.write("			$(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("			$(\"#join_form\").submit();			\r\n");
      out.write("			\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		return false;\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	/*\r\n");
      out.write("	$(\".join_button\").click(function(){\r\n");
      out.write("		//$(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("		//$(\"#join_form\").submit();\r\n");
      out.write("		\r\n");
      out.write("		var memberID = $('.id_input').val();                //ID 입력란\r\n");
      out.write("		var memberPW = $('.pw_input').val();				// 비밀번호 입력란\r\n");
      out.write("		var memberName = $('.member_input').val();			// 이름 입력란\r\n");
      out.write("		var memberMail = $('.mail_input').val();			// 이메일 입력란\r\n");
      out.write("		var memberPWCheck = $('.pwcheck_input').val();       //비밀번호 확인 입력란\r\n");
      out.write("		var mailCheck = $('.mail_check_input').val();       //메일 인증번호 \r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"post\",\r\n");
      out.write("			url:\"/member/join\",\r\n");
      out.write("			data:{\"memberID\" : memberID,\r\n");
      out.write("				\"memberPW\" : memberPW,\r\n");
      out.write("				\"memberName\" : memberName,\r\n");
      out.write("				\"memberMail\" : memberMail,\r\n");
      out.write("				\"memberPWCheck\" : memberPWCheck,\r\n");
      out.write("				\"mailCheck\" : mailCheck}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	*/\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/*아이디 중복검사*/\r\n");
      out.write(" $(\".id_input\").on(\"porpertychange change keyup paste input\", function(){\r\n");
      out.write("	\r\n");
      out.write("	 var memberID = $('.id_input').val(); //id input에 입력되는 값\r\n");
      out.write("	 var data = {memberID : memberID}  //controll에 넘길 데이터 이름\r\n");
      out.write("	 \r\n");
      out.write("	 $.ajax({\r\n");
      out.write("		type:\"post\",\r\n");
      out.write("		url:\"/member/memberIdCheck\",\r\n");
      out.write("		data:data,\r\n");
      out.write("		success : function(result){\r\n");
      out.write("			//console.log(\"성공여부:\"+result);\r\n");
      out.write("			if(result != 'fail'){\r\n");
      out.write("				$(\".id_input_available_id\").css(\"display\", \"inline-block\");\r\n");
      out.write("				$(\".id_input_unavailable_id\").css(\"display\", \"none\");\r\n");
      out.write("				idckCheck = true;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				$(\".id_input_unavailable_id\").css(\"display\", \"inline-block\");\r\n");
      out.write("				$(\".id_input_available_id\").css(\"display\", \"none\");\r\n");
      out.write("				idckCheck=false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	 });\r\n");
      out.write(" });\r\n");
      out.write(" \r\n");
      out.write(" $(\".mail_check_button\").click(function(){\r\n");
      out.write("	 var email = $(\".mail_input\").val(); //입력한 이메일\r\n");
      out.write("	 var checkBox = $(\".mail_check_input\"); //인증번호 입력란\r\n");
      out.write("	 var boxWrap = $(\".mail_check_iput_box\"); //인증번호 입력란 박스\r\n");
      out.write("	 \r\n");
      out.write("	 $.ajax({\r\n");
      out.write("		 \r\n");
      out.write("			type : \"GET\",\r\n");
      out.write("			url : \"mailCheck?email=\" + email,\r\n");
      out.write("			success : function(data) {\r\n");
      out.write("				//console.log(\"data : \"+data);\r\n");
      out.write("				checkBox.attr(\"disabled\", false);\r\n");
      out.write("				boxWrap.attr(\"id\", \"mail_check_input_box_true\");\r\n");
      out.write("				\r\n");
      out.write("				code = data;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write(" \r\n");
      out.write(" /*인증번호 비교*/\r\n");
      out.write(" $(\".mail_check_input\").blur(function(){\r\n");
      out.write("	 \r\n");
      out.write("	 var inputCode = $(\".mail_check_input\").val();\r\n");
      out.write("	 var checkResult = $(\"#mail_check_input_box_warnning\");\r\n");
      out.write("	 \r\n");
      out.write("	 if(inputCode == code){\r\n");
      out.write("		 checkResult.html(\"인증번호가 일치합니다.\");\r\n");
      out.write("		 checkResult.attr(\"class\", \"correct\");\r\n");
      out.write("		 mailnumCheck = true;\r\n");
      out.write("	 }\r\n");
      out.write("	 else{\r\n");
      out.write("		 checkResult.html(\"인증번호가 일치하지 않습니다.\");\r\n");
      out.write("		 checkResult.attr(\"class\", \"incorrect\");\r\n");
      out.write("		 mailnumCheck = false;\r\n");
      out.write("	 }\r\n");
      out.write(" });\r\n");
      out.write(" \r\n");
      out.write(" $(\".pwcheck_input\").on(\"porpertychange change keyup paste input\", function(){\r\n");
      out.write("	\r\n");
      out.write("	 var pw = $('.pw_input').val();\r\n");
      out.write("	 var pwck = $('.pwcheck_input').val();\r\n");
      out.write("	 $('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("	 \r\n");
      out.write("	 if(pw == pwck){\r\n");
      out.write("	        $('.pwCheck_input_correct').css('display','block');\r\n");
      out.write("	        $('.pwCheck_input_incorrect').css('display','none');\r\n");
      out.write("	        pwckcorCheck = true;\r\n");
      out.write("	    }\r\n");
      out.write("	 else{\r\n");
      out.write("	        $('.pwCheck_input_correct').css('display','none');\r\n");
      out.write("	        $('.pwCheck_input_incorrect').css('display','block');\r\n");
      out.write("	        pwckcorCheck = false;\r\n");
      out.write("	 }\r\n");
      out.write(" });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
